package com.chinarewards.elt.service.gift.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.chinarewards.elt.dao.gift.ImportGiftCodeDao;
import com.chinarewards.elt.domain.gift.ImportGiftCode;
import com.chinarewards.elt.model.gift.dataexchange.ImportGiftCodeData;
import com.chinarewards.elt.model.gift.dataexchange.ImportGiftCodeData.ParserCode;
import com.chinarewards.elt.model.gift.dataexchange.ImportGiftParser;
import com.chinarewards.elt.model.gift.dataexchange.ImportGiftParser.ParserMethod;
import com.chinarewards.elt.service.gift.ImportGiftCodeLogic;
import com.google.inject.Inject;

/**
 * The implementation of business logic bean for import code operation
 * 
 * @author yanrui
 * @since 1.5.2
 */
public class ImportGiftCodeLogicImpl implements ImportGiftCodeLogic {

	private final ImportGiftCodeDao importCodeDao;
	private static boolean isAutoGenerated = false;

	@Inject
	public ImportGiftCodeLogicImpl(ImportGiftCodeDao importCodeDao) {
		this.importCodeDao = importCodeDao;
	}

	protected void prepareImportGiftCode() {
		// manually create import Gift code when the method getAll is firstly invoked
		if (!isAutoGenerated) {
			try {
				Map<Long, ParserMethod> tmp = new HashMap<Long, ParserMethod>(); 
				List<ParserMethod> list2 = ImportGiftParser.getAllImportGiftMethod();
				for (ParserMethod method : list2) {
					tmp.put(method.getCode(), method);
				}
				List<ParserCode> list = ImportGiftCodeData.getAllImportGiftCode();
				for (ParserCode pcode : list) {
					ImportGiftCode code = findByCode(pcode.getCode());
					if (code == null) {
						code = new ImportGiftCode();
						code.setCode(pcode.getCode());
						code.setMessage(pcode.getMessage());
						code.setPriority(pcode.getPriority());
						code.setType(pcode.getType());
						code.setParserMethod(tmp.get(pcode.getCode()).getParserMethod());
						insertImportCode(code);
					} else {
						code.setMessage(pcode.getMessage());
						code.setPriority(pcode.getPriority());
						code.setType(pcode.getType());
						code.setParserMethod(tmp.get(pcode.getCode()).getParserMethod());
						importCodeDao.update(code);
					}
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
			isAutoGenerated = true;
		}
	}
	
	@Override
	public List<ImportGiftCode> getAll() {
		prepareImportGiftCode();
		return importCodeDao.getAll();
	}

	@Override
	public ImportGiftCode findByCode(Long code) {
		return importCodeDao.findByCode(code);
	}

	@Override
	public ImportGiftCode insertImportCode(ImportGiftCode code) {
		return importCodeDao.save(code);
	}

}
